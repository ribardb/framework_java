<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Utilisation d'une procédure stockée avec des paramètres de sortie</title><meta name="Language" content="fr-fr" /><meta name="Microsoft.Help.Id" content="1c006f27-7e99-43d5-974c-7b782659290c" /><meta name="Description" content="Une procédure stockée SQL Server que vous pouvez appeler est une procédure qui retourne un ou plusieurs paramètres OUT, paramètres utilisés par la procédure stockée pour retourner des données à l'application appelante." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">Utilisation d'une procédure stockée avec des paramètres de sortie</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Une procédure stockée SQL Server que vous pouvez appeler est une procédure qui retourne un ou plusieurs paramètres OUT, paramètres utilisés par la procédure stockée pour retourner des données à l'application appelante. Le Pilote JDBC Microsoft pour SQL Server intègre la classe <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a> que vous pouvez utiliser pour appeler ce type de procédure stockée et traiter les données qu'elle retourne.</p><p>Lorsque vous appelez ce type de procédure stockée à l'aide du pilote JDBC, vous devez utiliser la séquence d'échappement SQL <span class="code"> call </span> conjointement avec la méthode <a href="265b024c-898a-4bd0-98b5-f06076717b9e.htm">prepareCall</a> de la classe <a href="937292a6-1525-423e-a2b2-a18fd34c2893.htm">SQLServerConnection</a>. La syntaxe de la séquence d'échappement <span class="code">call</span> avec les paramètres OUT est la suivante :</p><p><span class="code">{call procedure-name[([parameter][,[parameter]]...)]}</span></p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Pour plus d'informations sur les séquences d'échappement SQL, consultez <span sdata="link"><a href="00f9e25a-088e-4ac6-aa75-43eacace8f03.htm">Utilisation de séquences d'échappement SQL</a></span>.</p></div><p>Lorsque vous construisez la séquence d'échappement <span class="code"> call </span>, spécifiez les paramètres OUT à l'aide du caractère ? (point d'interrogation). Ce caractère fait office d'espace réservé pour les valeurs de paramètre qui sont retournées par la procédure stockée. Pour spécifier une valeur pour un paramètre OUT, vous devez spécifier le type de données de chaque paramètre à l'aide de la méthode <a href="82f8d608-efc1-4af8-a985-ec25d19420aa.htm">registerOutParameter</a> de la classe <b>SQLServerCallableStatement</b> avant d'exécuter la procédure stockée. </p><p>La valeur que vous spécifiez pour le paramètre OUT dans la méthode <b>registerOutParameter</b> doit être l'un des types de données JDBC contenus dans java.sql.Types mappé sur l'un des types de données SQL Server natifs. Pour plus d'informations sur les types de données JDBC et SQL Server, consultez <span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">Présentation des types de données de pilote JDBC</a></span>.</p><p>Lorsque vous passez une valeur à la méthode <b>registerOutParameter</b> pour un paramètre OUT, vous devez spécifier non seulement le type de données à utiliser pour le paramètre, mais également la position ordinale du paramètre ou le nom du paramètre dans la procédure stockée. Par exemple, si votre procédure stockée contient un seul paramètre OUT, sa valeur ordinale est 1 ; si la procédure stockée contient deux paramètres, la première valeur ordinale est 1 et la seconde 2.</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Le pilote JDBC ne prend pas en charge l'utilisation des types de données CURSOR, SQLVARIANT, TABLE et TIMESTAMP SQL Server en tant que paramètres OUT.</p></div><p>Par exemple, créez la procédure stockée suivante dans l'exemple de base de données SQL Server 2005 AdventureWorks :</p><div class="sampleCode"><span codeLanguage="other"><pre>CREATE PROCEDURE GetImmediateManager
   @employeeID INT,
   @managerID INT OUTPUT
AS
BEGIN
   SELECT @managerID = ManagerID 
   FROM HumanResources.Employee 
   WHERE EmployeeID = @employeeID
END</pre></span></div><p>Cette procédure stockée retourne un seul paramètre OUT (ManagerID), un nombre entier, basé sur le paramètre IN spécifié (EmployeeID), qui est également un nombre entier. La valeur retournée dans le paramètre OUT est le ManagerID basé sur l'EmployeeID contenu dans la table HumanResources.Employee. </p><p>Dans l'exemple suivant, une connexion ouverte à l'exemple de base de données AdventureWorks est transmise à la fonction et la méthode <a href="e1367f39-23d7-4e26-b160-6d988d7e6988.htm">execute</a> est utilisée pour appeler la procédure stockée GetImmediateManager.</p><div class="sampleCode"><span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{call dbo.GetImmediateManager(?, ?)}");
      cstmt.setInt(1, 5);
      cstmt.registerOutParameter(2, java.sql.Types.INTEGER);
      cstmt.execute();
      System.out.println("MANAGER ID: " + cstmt.getInt(2));
   }
   catch (Exception e) {
      e.printStackTrace();
   }
}</pre></span></div><p>Cet exemple utilise les positions ordinales pour identifier les paramètres. Vous pouvez également identifier un paramètre en utilisant son nom plutôt que sa position ordinale. L'exemple de code suivant modifie l'exemple précédent afin de démontrer comment utiliser des paramètres nommés dans une application Java. Notez que les noms des paramètres correspondent aux noms des paramètres dans la définition de la procédure stockée :</p><div class="sampleCode"><span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{call dbo.GetImmediateManager(?, ?)}");
      cstmt.setInt("employeeID", 5);
      cstmt.registerOutParameter("managerID", java.sql.Types.INTEGER);
      cstmt.execute();
      System.out.println("MANAGER ID: " + cstmt.getInt("managerID"));
      cstmt.close();
   }
   catch (Exception e) {
      e.printStackTrace();
   }</pre></span></div><p>}</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Ces exemples utilisent la méthode <b>execute</b> de la classe <b>SQLServerCallableStatement</b> pour exécuter la procédure stockée. Elle est utilisée parce que la procédure stockée n'a pas retourné de jeu de résultats. Si elle l'avait fait, la méthode <a href="599cf463-e19f-4baa-bacb-513cad7c6cd8.htm">executeQuery</a> serait utilisée.</p></div><p>Les procédures stockées peuvent retourner des nombres de mises à jour et des jeux de résultats multiples. Le Pilote JDBC Microsoft pour SQL Server suit la spécification JDBC 3.0, qui stipule que les jeux de résultats et le nombre de mises à jour multiples doivent être récupérés avant les paramètres OUT. Autrement dit, l'application doit extraire tous les objets <b>ResultSet</b> et les nombres de mises à jour avant d'extraire les paramètres OUT à l'aide des méthodes <b>CallableStatement.getter</b>. Si tel n'est pas le cas, les objets <b>ResultSet</b> et les nombres de mises à jour qui n'ont pas encore été extraits seront perdus lors de l'extraction des paramètres OUT. Pour plus d'informations sur les nombres de mises à jour et les jeux de résultats multiples, consultez <span sdata="link"><a href="64cf4877-5995-4bfc-8865-b7618a5c8d01.htm">Utilisation d'une procédure stockée avec un nombre de mises à jour</a></span> et <span sdata="link"><a href="ab6a3cfa-073b-44e9-afca-a8675cfe5fd1.htm">Utilisation de plusieurs jeux de résultats</a></span>.</p></div><span id="seeAlsoSpan"><h1 class="heading">Voir aussi</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="0041f9e1-09b6-4487-b052-afd636c8e89a.htm">Utilisation d'instructions avec des procédures stockées</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">Envoyez vos <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dMerci pour vos commentaires qui permettent aux équipes chargées de rédiger la documentation développeur d\'en améliorer la qualité. Pendant la révision de vos commentaires, il est possible que nous vous contactions par courrier électronique afin de vous demander des éclaircissements ou d\'autres commentaires sur la solution envisagée. Nous n\'utilisons pas votre adresse de messagerie dans un autre but et nous la supprimons une fois notre révision terminée.%0\APour plus d\'informations sur les politiques de confidentialité de Microsoft, consultez http://privacy.microsoft.com/fr-fr/default.aspx.%0\A%0\d','Commentaires client.');">commentaires</a> sur cette rubrique à Microsoft.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft. Tous droits réservés.</a></p></span></div></div></body></html>