<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Exemple de lecture de données volumineuses</title><meta name="Language" content="fr-fr" /><meta name="System.Keywords" content="exemples de mise en mémoire tampon adaptative, définition de la mise en mémoire tampon adaptative" /><meta name="Microsoft.Help.Id" content="6c986144-3854-4352-8331-e79eccbefc28" /><meta name="Description" content="Cet exemple d'application du Pilote JDBC Microsoft pour SQL Server montre comment récupérer une valeur de colonne unique de grande taille à partir d'une base de données SQL Server, à l'aide de la méthode getCharacterStream." /><meta name="Microsoft.Help.ContentType" content="Samples" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">Exemple de lecture de données volumineuses</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Cet exemple d'application du Pilote JDBC Microsoft pour SQL Server montre comment récupérer une valeur de colonne unique de grande taille à partir d'une base de données SQL Server, à l'aide de la méthode <a href="c70e210f-0288-47cc-9268-a29c45979729.htm">getCharacterStream</a>.</p><p>Le fichier de code pour cet exemple se nomme readLargeData.java et se trouve à l'emplacement suivant :</p><p>&lt;<i>répertoire d'installation</i>&gt;\sqljdbc_&lt;<i>version</i>&gt;\&lt;<i>langue</i>&gt;\help\samples\adaptive</p></div><h1 class="heading">Spécifications</h1><div id="requirementsTitleSection" class="section" name="collapseableSection" style=""><p>Pour pouvoir exécuter cet exemple d'application, vous devez avoir accès à l'exemple de base de données SQL Server 2005 AdventureWorks. Vous devez également définir l'instruction classpath de façon à inclure le fichier sqljdbc.jar ou sqljdbc4.jar. Si l'instruction classpath n'a pas d'entrée pour sqljdbc.jar ou sqljdbc4.jar, l'exemple d'application lève l'exception usuelle « Classe introuvable ». Pour plus d'informations sur la définition de l'instruction classpath, consultez <span sdata="link"><a href="6faaf05b-8b70-4ed2-9b44-eee5897f1cd0.htm">Utilisation du pilote JDBC</a></span>.</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Le Pilote JDBC Microsoft pour SQL Server fournit les fichiers bibliothèques de classes sqljdbc.jar et sqljdbc4.jar, à utiliser en fonction de vos paramètres JRE (Java Runtime Environment) par défaut. Pour plus d'informations sur le fichier JAR à choisir, consultez <span sdata="link"><a href="447792bb-f39b-49b4-9fd0-1ef4154c74ab.htm">Configuration requise pour le pilote JDBC</a></span>.</p></div></div><h1 class="heading">Exemple</h1><div id="exampleSection" class="section" name="collapseableSection" style=""><p>Dans l'exemple suivant, le code établit une connexion à la base de données SQL Server 2005 AdventureWorks. Il crée ensuite des exemples de données et met à jour la table Production.Document en utilisant une requête paramétrable. </p><p>De plus, il montre comment obtenir le mode de mise en mémoire tampon adaptative à l'aide de la méthode <a href="a9a9ffdd-7ce3-4e0a-907c-34d6a54e6865.htm">getResponseBuffering</a> de la classe <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a>. Notez qu'à partir de la version 2.0 du pilote JDBC, la propriété de connexion responseBuffering a la valeur « adaptive » par défaut.</p><p>L'exemple de code utilise ensuite une instruction SQL avec l'objet <a href="ec24963c-8b51-4838-91e9-1fbfa2347451.htm">SQLServerStatement</a> pour exécuter l'instruction SQL et placer les données qu'elle retourne dans un objet <a href="eaffcff1-286c-459f-83da-3150778480c9.htm">SQLServerResultSet</a>.</p><p>Pour finir, il parcourt les lignes de données contenues dans le jeu de résultats et il utilise la méthode <a href="c70e210f-0288-47cc-9268-a29c45979729.htm">getCharacterStream</a> pour accéder à certaines des données qu'il contient. </p><div name="snippetGroup"><div class="sampleCode"><span codeLanguage="Java"><pre>import java.sql.*;
import java.io.*;
import com.microsoft.sqlserver.jdbc.SQLServerStatement;

public class readLargeData {
	
   public static void main(String[] args) {

      // Create a variable for the connection string.
      String connectionUrl = 
    	    "jdbc:sqlserver://localhost:1433;" +
            "databaseName=AdventureWorks;integratedSecurity=true;";

      // Declare the JDBC objects.
      Connection con = null;
      Statement stmt = null;
      ResultSet rs = null;  

      try {
          // Establish the connection.
          Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
          con = DriverManager.getConnection(connectionUrl);

          // Create test data as an example.
          StringBuffer buffer = new StringBuffer(4000);
          for (int i = 0; i &lt; 4000; i++) 
              buffer.append( (char) ('A'));
	    	
          PreparedStatement pstmt = con.prepareStatement(
                    "UPDATE Production.Document " +
                     "SET DocumentSummary = ? WHERE (DocumentID = 1)");

          pstmt.setString(1, buffer.toString());
          pstmt.executeUpdate();
          pstmt.close();

          // In adaptive mode, the application does not have to use a server cursor 
          // to avoid OutOfMemoryError when the SELECT statement produces very large
          // results. 

          // Create and execute an SQL statement that returns some data.
          String SQL = "SELECT Title, DocumentSummary " +
	      		       "FROM Production.Document";
          stmt = con.createStatement();

          // Display the response buffering mode.
          SQLServerStatement SQLstmt = (SQLServerStatement) stmt;          
          System.out.println("Response buffering mode is: " +
             SQLstmt.getResponseBuffering());              

          // Get the updated data from the database and display it.
          rs = stmt.executeQuery(SQL);
	                  
          while (rs.next()) {
               Reader reader = rs.getCharacterStream(2);
               if (reader != null)
               {
                  char output[] = new char[40];
                  while (reader.read(output) != -1)
                  {
                      // Do something with the chunk of the data that was                       
                      // read.
                  }		 		 

                  System.out.println(rs.getString(1) + 
                      " has been accessed for the summary column.");
                  // Close the stream.
                  reader.close();
               }
          }
      }
      // Handle any errors that may have occurred.
      catch (Exception e) {
         e.printStackTrace();
      }
      finally {
          if (rs != null) try { rs.close(); } catch(Exception e) {}
          if (stmt != null) try { stmt.close(); } catch(Exception e) {}
    	  if (con != null) try { con.close(); } catch(Exception e) {}
      }
   }
}

</pre></span></div></div></div><span id="seeAlsoSpan"><h1 class="heading">Voir aussi</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="5b93569f-eceb-4f05-b49c-067564cd3c85.htm">Utilisation de données volumineuses</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">Envoyez vos <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dMerci pour vos commentaires qui permettent aux équipes chargées de rédiger la documentation développeur d\'en améliorer la qualité. Pendant la révision de vos commentaires, il est possible que nous vous contactions par courrier électronique afin de vous demander des éclaircissements ou d\'autres commentaires sur la solution envisagée. Nous n\'utilisons pas votre adresse de messagerie dans un autre but et nous la supprimons une fois notre révision terminée.%0\APour plus d\'informations sur les politiques de confidentialité de Microsoft, consultez http://privacy.microsoft.com/fr-fr/default.aspx.%0\A%0\d','Commentaires client.');">commentaires</a> sur cette rubrique à Microsoft.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft. Tous droits réservés.</a></p></span></div></div></body></html>